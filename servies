#!/bin/bash

ROUTE_URLS=()
ROUTE_METHODS=()
ROUTE_HANDLERS=()

#=== FUNCTION =================================================================
#        NAME: pipe
# DESCRIPTION: create a fifo that acts as a pipe from a program to another
# PARAMETER 1: name of fifo file
#==============================================================================
pipe() {
    local name=$1

    mkfifo "$name"
    trap "rm -f '$name'" exit
    echo "created $name fifo"
}

#=== FUNCTION =================================================================
#        NAME: listen
# DESCRIPTION: makes netcat listen for a request
# PARAMETER 1: name of fifo file
# PARAMETER 2: listen on this host
# PARAMETER 2: listen on this port
#==============================================================================
listen() {
    local conn=$1
    local host=$2
    local port=$3

    echo "starting server on $HOST:$PORT"

    while true; do
        cat "$conn" | netcat -l "$host" "$port" > >(
            local parsed=0
            local method=
            local url=

            while read line; do
                line=$(echo "$line" | tr -d '\r\n')

                if [ "$parsed" -eq 0 ]; then
                    parsed=1
                    url=$(echo "$line" | sed -n 's/.* \(\/.*\) .*/\1/p')
                    method=$(echo "$line" | sed -n 's/\(.*\) .* .*/\1/p');
                fi

                if [ "x$line" = "x" ]; then
                    route "$conn" "$method" "$url"
                fi
            done
        )
    done
}

#=== FUNCTION =================================================================
#        NAME: route
# DESCRIPTION: find a request handler and call the action
# PARAMETER 1: name of fifo file
# PARAMETER 2: http method
# PARAMETER 3: url
#==============================================================================
route() {
    local action=

    local conn=$1
    local method=$2
    local url=$3

    echo "routing ($method) $url"

    for ((i=0;i<${#ROUTE_METHODS[@]};i++))
    do
        if [ "${ROUTE_METHODS[$i]}" = "$method" ] && [ "${ROUTE_URLS[$i]}" = "$url" ]; then
            action="${ROUTE_HANDLERS[$i]}"
        fi
    done

    if [ ! -z "$action" ]; then
        "$action" > "$conn"
    else
        echo HTTP/1.1 404 Not Found > "$conn"
        echo Content-Type: text/plain > "$conn"
        echo > "$conn"
        echo > "$conn"
    fi
}

#=== FUNCTION =================================================================
#        NAME: go
# DESCRIPTION: start a server
#==============================================================================
go() {
    [ -z "$PORT" ] && PORT=8080
    [ -z "$HOST" ] && HOST=0.0.0.0
    pipe "conn"
    listen "conn" "$HOST" "$PORT"
}

#=== FUNCTION =================================================================
#        NAME: get
# DESCRIPTION: add a get rout handler
# PARAMETER 1: url string (include first forward slash)
# PARAMETER 2: command name
#==============================================================================
get() {
    local url=$1
    local handler=$2

    ROUTE_URLS+=("$url")
    ROUTE_METHODS+=("GET")
    ROUTE_HANDLERS+=("$handler")
}
